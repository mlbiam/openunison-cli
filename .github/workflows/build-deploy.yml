name: Build oulogin
on:
  push:
    branches:
      - main
    # tags:
    #   - 'v*.*.*'
permissions:
  id-token: write
  contents: read
  packages: write
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v1

      - run: echo "PROJ_VERSION=1.1.0" >> $GITHUB_ENV

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: ${{ secrets.SESSION_NAME }}
          aws-region: us-east-1

      - run: ./build.sh ${{ secrets.S3_DIR }}

      - run: |-
          cp ./target/openunison-cli-v$PROJ_VERSION-linux docker/openunison-cli
      # - name: Update new version in krew-index
      #   uses: rajatjindal/krew-release-bot@v0.0.46

      - name: Login to container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: generate tag
        run: |-
            echo "Project Version: $PROJ_VERSION"
            echo "TAG=$PROJ_VERSION-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
            echo "SHORT_TAG=$PROJ_VERSION" >> $GITHUB_ENV
            
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: "."
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.REPO }}:${{ env.TAG }}
            ghcr.io/${{ env.REPO }}:${{ env.SHORT_TAG }}
            ghcr.io/${{ env.REPO }}:latest

      - name: sign images
        run: |-
                  cosign sign -y ghcr.io/${{ env.REPO }}:${{ env.TAG }}

      - uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ env.REPO }}:${{ env.TAG }}
          format: spdx
          output-file: /tmp/spdxg
    
      - name: attach sbom to images
        run: |-
              cosign attach sbom --sbom /tmp/spdxg ghcr.io/${{ env.REPO }}:${{ env.TAG }}
    
              
              GH_SBOM_SHA=$(cosign verify --certificate-oidc-issuer-regexp='.*' --certificate-identity-regexp='.*' ghcr.io/${{ env.REPO }}:${{ env.TAG }} 2>/dev/null | jq -r '.[0].critical.image["docker-manifest-digest"]' | cut -c 8-)
    
              
              echo "GH_SBOM_SHA: $GH_SBOM_SHA"

              
              cosign sign -y ghcr.io/${{ env.REPO }}:sha256-$GH_SBOM_SHA.sbom
        